
#ifdef OPTION_MAIN_SOURCE
#define OPT_EXTERN(a,b,...) a b= __VA_ARGS__
#else
#define OPT_EXTERN(a,b,...) extern a b
#endif

//------------------------------------------------------------------------
// Option V4 tables
//------------------------------------------------------------------------

#if THIS_IS_A_GOOD_IDEA_OR_THIS_HAS_A_USE

//# Table: 'option4_exception_time'
//# 
#define OPTION4_EXCEPTION "option4_exception"

OPT_EXTERN( CTEXTSTR, option4_exception,  "CREATE TABLE `option4_exception` (" 
 "  `option_exception_id` char(36) NOT NULL,\n" 
 "  `apply_from` datetime default '0000-00-00 00:00:00',\n" 
 "  `apply_until` datetime default '0000-00-00 00:00:00',\n" 
 "  `system_id` int(11) NOT NULL default '0',\n" 
 "  `override_value_id` char(36) NOT NULL default '0',\n" 
 "  `option_id` char(36) NOT NULL default '0',\n" 
 "   UNIQUE `option_exception_idkey` (`option_exception_id`),\n" 
 "   KEY `FK_map_exception` (`option_id`),\n" 
 "   CONSTRAINT `FK_map_exception` FOREIGN KEY (`option_id`) REFERENCES `option4_map` (`option_id`) ON DELETE CASCADE ON UPDATE CASCADE\n" 
 " ) TYPE=InnoDB;\n" ) ;

#endif

//# Table: 'option4_map'
//# 
#define OPTION4_MAP "option4_map"

OPT_EXTERN( CTEXTSTR, option4_map,  "CREATE TABLE `option4_map` (" 
 "  `option_id` char(36) NOT NULL,\n" 
 "  `parent_option_id` char(36) NOT NULL default '0',\n" 
 "  `name_id` char(36) NOT NULL default '0',\n" 
 "  `description` tinytext,\n" 
 "  PRIMARY KEY  (`option_id`)," 
 "  INDEX `parent_key`(`parent_option_id`)," 
 "  UNIQUE `parent_key2`(`parent_option_id`,`name_id`)," 
 "  CONSTRAINT `FK_map_map` FOREIGN KEY (`parent_option_id`) REFERENCES `option4_map` (`option_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n" 
 "  CONSTRAINT `FK_name_map` FOREIGN KEY (`name_id`) REFERENCES `option4_name` (`name_id`) ON DELETE CASCADE ON UPDATE CASCADE\n" 
 " ) TYPE=InnoDB COMMENT='Table ID defines ID for use in OptionValues';\n" ) ;

//# Table: 'option4_name'
//# 
#define OPTION4_NAME  "option4_name" 
OPT_EXTERN( CTEXTSTR, option4_name,  "CREATE TABLE `option4_name` (" 
 "  `name_id` char(36) NOT NULL,\n" 
 "  `name` varchar(255) NOT NULL default '',\n" 
 "  PRIMARY KEY  (`name_id`),\n" 
 "  UNIQUE `name` (`name`)" 
 " ) TYPE=InnoDB;\n" ) ;

//# Table: 'option4_values'
//# 
#define OPTION4_VALUES "option4_values"
OPT_EXTERN( CTEXTSTR, option4_values,  "CREATE TABLE `option4_values` (" 
 "  `option_id` char(36) default '0',\n" 
 "  `string` varchar(100) default NULL,\n" 
 "  `segment` int(11) default 0,\n" 
 "  UNIQUE `value_id` (`option_id`,`segment`),\n" 
 "  CONSTRAINT `FK_map_values` FOREIGN KEY (`option_id`) REFERENCES `option4_map` (`option_id`) ON DELETE CASCADE ON UPDATE CASCADE\n" 
 " ) TYPE=InnoDB;\n" ) ;

//# Table: 'option4_blobs'
//# 
#define OPTION4_BLOBS "option4_blobs"
OPT_EXTERN( CTEXTSTR, option4_blobs,  "CREATE TABLE `option4_blobs` (" 
 "  `option_id` char(36) default '0',\n" 
 "  `binary` blob,\n" 
 "  UNIQUE `value_id` (`option_id`)," 
 "  CONSTRAINT `FK_map_blobs` FOREIGN KEY (`option_id`) REFERENCES `option4_map` (`option_id`) ON DELETE CASCADE ON UPDATE CASCADE\n" 
 " ) TYPE=InnoDB;\n" ) ;

//#SELECT 
//#//#a.name_id, b.name_id, c.name_id,d.name_id, e.name_id, f.node_id, g.node_id, h.node_id
//#ona.name,onb.name,onc.name,ond.name,one.name,onf.name,ong.name,onh.name
//#FROM `option_map` as a
//#left join option_map as b on b.parent_node_id=a.node_id
//#left join option_map as c on c.parent_node_id=b.node_id
//#left join option_map as d on d.parent_node_id=c.node_id
//#left join option_map as e on e.parent_node_id=d.node_id
//#left join option_map as f on f.parent_node_id=e.node_id
//#left join option_map as g on g.parent_node_id=f.node_id
//#left join option_map as h on h.parent_node_id=g.node_id
//#
//#join option_name as ona on ona.name_id=a.name_id
//#join option_name as onb on onb.name_id=b.name_id
//#join option_name as onc on onc.name_id=c.name_id
//#join option_name as ond on ond.name_id=d.name_id
//#join option_name as one on one.name_id=e.name_id
//#left join option_name as onf on onf.name_id=f.name_id
//#left join option_name as ong on ong.name_id=g.name_id
//#left join option_name as onh on onh.name_id=h.name_id

