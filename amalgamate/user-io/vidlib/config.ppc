#define _INCLUDE_CLIPBOARD

#ifdef _MSC_VER
// because snprintf IS secure; and _snprintf doesn't help.
#  define _CRT_SECURE_NO_WARNINGS
#endif

#ifndef HAVE_SSL
#  define NO_SSL 1
#endif

#ifndef HAVE_ZLIB
#  define __NO_WEBSOCK_COMPRESSION__
#endif

#define SACK_AMALGAMATE
#define NO_OPEN_MACRO
//#define __NO_MMAP__
#define __STATIC__
#define NO_FILEOP_ALIAS
#define __STATIC_GLOBALS__

//#define TYPELIB_SOURCE
#define NEED_SHLAPI
#define NEED_SHLOBJ
#deifne _INCLUDE_CLIPBOARD

#define _OPENGL_ENABLED
#define RENDER_LIBRARY_SOURCE

// define to get HTOUCHINPUT defined
#define WINVER 0x0601 

// need real_
#define NEED_REAL_IMAGE_STRUCTURE

// assume that this will be statically linked to the executable.
// Otherwise this will have to be overloaded
#ifndef TARGETNAME 
#  define TARGETNAME NULL 
#endif
//#include <stdio.h>
//#include <stdarg.h> 
//#include <stdhdrs.h>

#if 0
#ifdef __cplusplus
namespace sack {
   namespace logging {
#endif
      INDEX real_lprintf( char const* f,... ) { va_list va; int n; va_start(va,f); n = vprintf(f ,va); puts(""); return n; }
      INDEX null_lprintf( char const* f,... ) { return 0; }
      RealLogFunction _xlprintf(uint32_t level DBG_PASS) { return real_lprintf; };
      void SystemLog( char const* f ) { puts( f ); puts( "ZZZZ\n" ); }
#ifdef __cplusplus
   }
}
#endif
#endif